=============A DESCRIPTION

main
	
	Entry point for the server, establishes connections and acts as a controller between the 3 input output threads.

	Will route any incoming data from input to the send_thread(), and will respond
	to any data sent by the recv_thread(). 

input_thread

	Monitors the screen for keyboard input. Whenever a user hits enter
	the data they typed in is sent to main() for processing. 

send_thread()
	
	Broadcasts client input data to the server. This includes calls
	to join a channel, leave a channel or send a message.

recv_thread()
	
	Waits on data from the server. If data is recieved, it is passed along 
	to main for processing.

switchboard()
	
	Function which decides how to respond to data transfers and recieves.
	CASES:
		If /join <channel name> is recieved from input
			send a client_join_pkt
		if /quit <channel name> is recieved from input
			send a client_quit_pkt
			call shutdown routines on channel window
		if /exit is recieved from input 
			close sockets
			call shutdown routines on entire program
		if a string is passed with no preceeding /
			send a client_msg_pkt

		if server_kick_pkt is recieved
			display kick message
			call shutdown routines on channel window
		if server_msg_pkt is recieved
			update specified chat window with message
		if channel_info_packet is recieved
			if REJECTED CONNECTION
				print failed to connect message
			if CONNECTION ACCEPTED
				load chat window
				update player list in window
				add channel to internal channel listing
			if CLIENT_LIST_UPDATE
				update player list in window of specified channel

==============PSEUDOCODE

main
	
	establish intial tcp server connection
	create 3 pipes
	intiate send and recv thread, pass TCP socket to each
	intiate input thread
	select call on 2 pipes
		if input incoming
			display input to screen
			send data to send_thread pipe
			switchboard()
		if recv_thread incoming
			read data
			respond to data
			switchboard()

input_thread

	wait for keyboard input
	if input recieved
		save character to message buffer
	if enter is recieved
		send contents of message buffer to main
	if message limit is exceeded


