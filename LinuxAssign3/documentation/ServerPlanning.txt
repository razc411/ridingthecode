main 
	intializes any specified channel threads
	intializes semaphore for channel list
	starts up channels and connection thread
	LISTENS ON INPUT, CONNECTION MANAGER AND CHANNELS
		if an input command is recieved
			if quit
				close all connections
				close threads
				exit
			if kick <user> <channel>
				send out kick packet to user
				close socket
			if shutdown <channel>
				send out kick packet to all users of channel
				close sockets
				close channel thread
			if create <channel>
				creates a new channel thread
				adds channel to channel list
		if connection manager responds
			add new client to list
			pass new client message to 
		if channel responds (only responds on exit)
			clean channel and clients up

input_thread

	wait for keyboard input
	if input recieved
		save character to message buffer
	if enter is recieved
		send contents of message buffer to main

accept_thread
	listen for incoming connections
	if connection found
		establish connection
		pass data to main thread

channel_thread
	checks for any new clients in client list
		if new client in list signal recieved
			add to internal client list
	if a command is recieved respond
		if join, send connection code and data		
		if quit, send message to main to cleanup, exit
		if kick, remove client from list
		if leave, remove from channel client list
		if msg, broadcast to other clients	

===================================================

Server will be command line, accepts typed input, plans to have 
data listing functions such as listing players in a channel, all 
open channels.